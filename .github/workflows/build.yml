name: Neovim Builder
on:
  workflow_dispatch:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '* */6 * * *'

jobs:
  build:
    runs-on: macos-10.15

    name: Upload Release Asset
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          repository: 'neovim/neovim'
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          if [[ "$OSTYPE" == "linux-gnu" ]]; then
            make CMAKE_BUILD_TYPE=RelWithDebInfo CMAKE_EXTRA_FLAGS="-DCMAKE_INSTALL_PREFIX:PATH="
          else
            make CMAKE_BUILD_TYPE=Release \
                 CMAKE_EXTRA_FLAGS="-DCMAKE_INSTALL_PREFIX:PATH="
          fi

          make install

          zip -r nightly-mac build
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: nightly
          release_name: Nightly
          draft: false
          prerelease: true
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./nightly-mac.zip
          asset_name: nightly-mac.zip
          asset_content_type: application/zip
